name: CI/CD Pipeline  

on:
  push:
    branches: [main] # Adjust branch name as per your main branch
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.15.0]  # Choose your Node.js version here
      
    services:
      mysql:
        image: mysql:5.7

        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: booklibrary_test
       
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install

    - name: Ensure mocha permissions
      run: chmod +x ./node_modules/.bin/mocha

    - name: Set up environment variables
      run: |
        echo "DB_HOST=127.0.0.1" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_USER=root" >> .env
        echo "DB_PASSWORD=root" >> .env
        echo "DB_NAME=booklibrary_test" >> .env

    - name: Run database migrations and seed (if necessary)
      run: |
        npx sequelize-cli db:migrate
        npx sequelize-cli db:seed:all  # Adjust this based on your ORM or database setup

    - name: Start MySQL service
      run: sudo service mysql start

    - name: Start Node.js server
      run: |
        npm start &
        sleep 5  # Wait for server to start

    - name: Run tests
      run: npm test

    - name: Stop Node.js server
      run: |
        lsof -i :3333 -t | xargs kill -9 || true  # Ignore errors if server is not running

    - name: Stop MySQL service
      run: sudo service mysql stop