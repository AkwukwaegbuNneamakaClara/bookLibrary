name: Node.js CICD  

on:
  push:
    branches:
      - main  # Adjust branch name as per your main branch

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.15.0]  # Choose your Node.js version here
      
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: booklibrary_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install

    - name: Ensure mocha permissions
      run: chmod +x ./node_modules/.bin/mocha

    - name: Wait for MySQL
      run: |
        until mysqladmin ping -h 127.0.0.1 --silent; do
          echo 'Waiting for MySQL...'
          sleep 5
        done

    - name: Run tests
      run: npm test
      env:
        NODE_ENV: test
        DB_HOST: 127.0.0.1
        DB_USER: root
        DB_PASSWORD: root
        DB_NAME: booklibrary_test

    - name: Deploy to production
      if: success()  # Deploy only on successful tests
      run: |
        npm run build  # Add this if you have a build step
        npm run deploy  # Replace with your deployment command/script
     
      env:
        NODE_ENV: production
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_NAME: booklibrary # Production database name
